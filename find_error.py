{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "4040db76-9a61-48fb-89f8-f7d2d1b78be3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "전체 인스턴스: 5000\n",
      "총 음수 엔트리: 5\n",
      "음수 발생 인스턴스 예시 (최초 5개): [616, 3346, 3548, 4310, 4904]\n",
      "60 km 초과 엔트리: 32712\n",
      "60 km 초과 인스턴스 예시 (최초 5개): [1, 3, 5, 7, 9]\n"
     ]
    }
   ],
   "source": [
    "# inspect_dist_anomalies.py\n",
    "import pickle\n",
    "import numpy as np\n",
    "\n",
    "PKL_PATH = \"data/road_TSP_100.pkl\"   # 실제로 쓰고 있는 pkl 경로 확인!\n",
    "\n",
    "data = pickle.load(open(PKL_PATH, \"rb\"))\n",
    "n_inst = len(data)\n",
    "\n",
    "neg_entries = 0\n",
    "oversize_entries = 0\n",
    "neg_instances = []\n",
    "oversize_instances = []\n",
    "THRESH = 60_000  # 60 km 이상을 과도하다고 봅니다\n",
    "\n",
    "for idx, inst in enumerate(data):\n",
    "    dist = np.array(inst[\"dist\"], dtype=float)\n",
    "    # 무한대 제외\n",
    "    finite = dist[np.isfinite(dist)]\n",
    "    # 음수\n",
    "    neg_idx = np.where(finite < 0)[0]\n",
    "    if neg_idx.size:\n",
    "        neg_entries += neg_idx.size\n",
    "        neg_instances.append(idx)\n",
    "    # 너무 큰 값\n",
    "    over_idx = np.where(finite > THRESH)[0]\n",
    "    if over_idx.size:\n",
    "        oversize_entries += over_idx.size\n",
    "        oversize_instances.append(idx)\n",
    "\n",
    "print(f\"전체 인스턴스: {n_inst}\")\n",
    "print(f\"총 음수 엔트리: {neg_entries}\")\n",
    "print(f\"음수 발생 인스턴스 예시 (최초 5개): {neg_instances[:5]}\")\n",
    "print(f\"60 km 초과 엔트리: {oversize_entries}\")\n",
    "print(f\"60 km 초과 인스턴스 예시 (최초 5개): {oversize_instances[:5]}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ce68a7aa-2f94-4e4e-a8b6-65c8290fbb2f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      ">>> Instance #616\n",
      "  lat  range: 37.40536 ~ 37.64972\n",
      "  lon  range: 126.80205 ~ 127.14990\n",
      "  dist min: -1.60 m\n",
      "  dist max: 77733.30 m\n",
      "  ⚠️ Negative entries at pairs (i,j): [[45, 54]] ...\n",
      "  ⚠️ >60 km entries at (i,j): [[46, 17], [46, 19], [46, 22], [46, 26], [46, 30], [46, 35], [46, 38], [46, 39], [46, 40], [46, 43]] ...\n",
      "\n",
      ">>> Instance #3346\n",
      "  lat  range: 37.40172 ~ 37.64381\n",
      "  lon  range: 126.80630 ~ 127.14705\n",
      "  dist min: -1.00 m\n",
      "  dist max: 62195.10 m\n",
      "  ⚠️ Negative entries at pairs (i,j): [[61, 56]] ...\n",
      "  ⚠️ >60 km entries at (i,j): [[18, 5], [18, 23], [18, 40], [18, 95], [18, 97]] ...\n",
      "\n",
      ">>> Instance #3548\n",
      "  lat  range: 37.40004 ~ 37.65000\n",
      "  lon  range: 126.80945 ~ 127.14845\n",
      "  dist min: -1.40 m\n",
      "  dist max: 51352.90 m\n",
      "  ⚠️ Negative entries at pairs (i,j): [[63, 97]] ...\n",
      "\n",
      ">>> Instance #1\n",
      "  lat  range: 37.40505 ~ 37.64868\n",
      "  lon  range: 126.80150 ~ 127.14678\n",
      "  dist min: 0.00 m\n",
      "  dist max: 60822.10 m\n",
      "  ⚠️ >60 km entries at (i,j): [[31, 23]] ...\n",
      "\n",
      ">>> Instance #3\n",
      "  lat  range: 37.40407 ~ 37.64969\n",
      "  lon  range: 126.80425 ~ 127.14878\n",
      "  dist min: 0.00 m\n",
      "  dist max: 66309.90 m\n",
      "  ⚠️ >60 km entries at (i,j): [[0, 52], [5, 52], [7, 52], [48, 52], [51, 52], [52, 0], [52, 5], [52, 7], [52, 48], [52, 51]] ...\n",
      "\n",
      ">>> Instance #5\n",
      "  lat  range: 37.40396 ~ 37.64844\n",
      "  lon  range: 126.80387 ~ 127.14419\n",
      "  dist min: 0.00 m\n",
      "  dist max: 62280.40 m\n",
      "  ⚠️ >60 km entries at (i,j): [[97, 56]] ...\n"
     ]
    }
   ],
   "source": [
    "# inspect_anomalies.py\n",
    "import pickle\n",
    "import numpy as np\n",
    "\n",
    "PKL_PATH = \"data/road_TSP_100.pkl\"   # 실제 사용 중인 pkl 경로\n",
    "THRESH   = 60_000.0                  # 과도한 거리 기준\n",
    "\n",
    "data = pickle.load(open(PKL_PATH, \"rb\"))\n",
    "\n",
    "# 앞서 발견된 문제 인덱스 예시\n",
    "neg_idxs      = [616, 3346, 3548, 4310, 4904]\n",
    "oversize_idxs = [1, 3, 5, 7, 9]\n",
    "\n",
    "def inspect(idx):\n",
    "    inst = data[idx]\n",
    "    coords = np.array(inst[\"loc\"])      # shape (N,2), (lat, lon)\n",
    "    dist   = np.array(inst[\"dist\"])     # shape (N,N)\n",
    "\n",
    "    print(f\"\\n>>> Instance #{idx}\")\n",
    "    print(f\"  lat  range: {coords[:,0].min():.5f} ~ {coords[:,0].max():.5f}\")\n",
    "    print(f\"  lon  range: {coords[:,1].min():.5f} ~ {coords[:,1].max():.5f}\")\n",
    "    print(f\"  dist min: {dist[np.isfinite(dist)].min():.2f} m\")\n",
    "    print(f\"  dist max: {dist[np.isfinite(dist)].max():.2f} m\")\n",
    "\n",
    "    neg_pos = np.argwhere(dist < 0)\n",
    "    if len(neg_pos):\n",
    "        print(f\"  ⚠️ Negative entries at pairs (i,j): {neg_pos.tolist()[:10]} ...\")\n",
    "\n",
    "    over_pos = np.argwhere(dist > THRESH)\n",
    "    if len(over_pos):\n",
    "        print(f\"  ⚠️ >60 km entries at (i,j): {over_pos.tolist()[:10]} ...\")\n",
    "\n",
    "# 음수 발생 인스턴스 몇 개 확인\n",
    "for i in neg_idxs[:3]:\n",
    "    inspect(i)\n",
    "\n",
    "# 과도한 거리 인스턴스 몇 개 확인\n",
    "for i in oversize_idxs[:3]:\n",
    "    inspect(i)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e17dcdf-56f0-4c11-b611-197c19fa1b3b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
